from old_core.src.languages_handler import chose_languagedef action_build(language, action_name):    def action_select(update_action, test_action):        if action_name == 'update':            return update_action        if action_name == 'test':            return test_action    def eng(): return action_select('The Update', 'The Test pre-release')    def ita(): return action_select('L\'Aggiornamento', 'Il Test pre-rilacio')    return chose_language(        language,        eng, ita=ita    )def time_build(language, action, time_to_start=None, time_duration=None):    def build_sentence(out_to_start, out_junction, out_duration):        out = action        if time_to_start is not None:            out += ' {}'.format(out_to_start)            if time_duration is not None:                out += ' {} {}.'.format(out_junction, out_duration)            else:                out += '.'        elif time_duration is not None:            out += ' {}.'.format(out_duration)        else:            return ""        return out    def eng():        out_to_start = 'will start in {}'.format(time_to_start)        out_junction = 'and it'        out_duration = 'will last {}'.format(time_duration)        return build_sentence(out_to_start, out_junction, out_duration)    def ita():        out_to_start = 'comincerà tra {}'.format(time_to_start)        out_junction = 'e'        out_duration = 'durerà per {}'.format(time_duration)        return build_sentence(out_to_start, out_junction, out_duration)    return chose_language(        language,        eng, ita=ita    )def update_deploy_reply(language, version):    def eng(): return 'The test pre-release of version {} has been complected successfully.'.format(version)    def ita(): return 'Il test pre-rilascio della versione {} è stato completato con successo.'.format(version)    return chose_language(        language,        eng, ita=ita    )def update_competed_reply(language, version):    def eng(): return 'The uptdate to the version {} has been complected successfully.'.format(version)    def ita(): return 'L\'update alla versione {} è stato completato con successo.'.format(version)    return chose_language(        language,        eng, ita=ita    )def update_test_reply(language, version, time):    def eng():        out = 'The new version {} is ready!\n{}\n' \              'If during this time no bugs will be reported the final update will begin'        return out.format(version, time)    def ita():        out = 'La nuova versione {} è pronta!\n{}\n' \              'Se e durante questo lasso di tempo non verranno riscontrati problemi ci sarà l\'udate definitivo.'        return out.format(version, time)    return chose_language(        language,        eng, ita=ita    )def update_abort_reply(language):    def eng(): return 'The update has been aborted, cause unexpected bugs, a new try will be done in few days'    def ita(): return 'L\'aggiornamento è stato annullato, a causa di bug imprevisti, ' \                      'verrà fatto un nuovo tentativo tra alcuni giorni'    return chose_language(        language,        eng, ita=ita    )def note_build(language, params):    params = dict(params)    note = params.get('note')    if note is None:        return None    def eng(): return 'Note:\n{}'.format(note)    def ita(): return 'Note:\n{}'.format(params.get('note.ita', note))    return chose_language(        language,        eng, ita=ita    )